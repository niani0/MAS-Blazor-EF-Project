@page "/workersList"
@inject IWorkerService WorkerService

<h3>List of Workers</h3>

@if (sawmillWorkers != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Age</th>
                <th>Pesel</th>
                <th>Seniority</th>
                <th>Salary</th>
                <th>Add</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var worker in sawmillWorkers)
            {
                <tr>
                    <td>@worker.FirstName</td>
                    <td>@worker.LastName</td>
                    <td>@worker.getAge()</td>
                    <td>@worker.Pesel</td>
                    <td>@worker.Seniority</td>
                    <td>@worker.Salary</td>
                    <td><input type="checkbox"></td>
                </tr>
            }
        </tbody>
    </table>
    
    <div class="specialization-input">
        <label for="teamSpecialization">Team Specialization:</label>
        <input type="text" id="teamSpecialization" @bind="@teamSpecialization" />
    </div>
    
    <button class="btn" disabled>Add Worker</button>
}
else
{
    <p>Loading workers...</p>
}

<style>
    .table {
        width: 100%;
        border-collapse: collapse;
    }
    
    th, td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }
    
    th {
        background-color: #f2f2f2;
    }
    
    tbody tr:nth-child(even) {
        background-color: #f9f9f9;
    }
    
    .specialization-input {
        margin-top: 20px;
    }
    
    .specialization-input label {
        display: block;
        margin-bottom: 5px;
    }
    
    .btn {
        margin-top: 10px;
        padding: 8px 16px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: not-allowed;
    }
</style>

@code {
    public List<SawmillWorker> sawmillWorkers { get; set; }
    public string teamSpecialization { get; set; }

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        sawmillWorkers = await WorkerService.GetWorkers();
    }
}
